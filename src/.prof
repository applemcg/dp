source functionlib 2> /dev/null
source ./dp_app    2> /dev/null
source ./dplib     2> /dev/null
export USER_BACKUP_AREA=/git/
export ALTERNATE_BACKUP_DIRS=".bak ../version"
alias dpd='off; source ./.prof'
dp_version () 
{ 
    : print the version;
    : the SMART way, dp_version backup_ver;
    : date: 2022-08-22;
    : date: 2022-08-27;
    : date: 2022-09-06;
    ${*:-echo} 0.4.0
}
dp_all () 
{ 
    : all the functions in the DP family;
    : date: 2022-08-22;
    : date: 2022-09-04;
    ${*:-echo} dp dp_{abstracts,all,diff,example,funs,hint,init,install} dp_{profs,root,test,tolibrary,utilities,version} dp_{cblock,compareall,functions,header,libraries} dp_{restore,rmfunctions}
}

false &&
{
	return;
	# see Workflow.md

    see DOT fuse for "fuse"
    
    mv .ver/* ../version
    backup_ver 0.4.b
    find ../version -type f
    echo . . . . . . .
    ls -al .. ../{bin,lib}
    # ---------------- inspect the versioning functions	--
    #
    def dp_version backup_ver
    # ------------------------------ here is an example	--
    #
    dp_version backup_ver 2>&1

    find $(dp_version backup_ver 2>&1)
    # ----------------------------- show off the latest	--
    #
    ls -lrtd $(find $(dp_version backup_ver 2>&1))


    # dp_utilities | awk '$2 ~ /[(][)]/ { fun = $1; } /reading/ { printf "%s\t%s\n", fun, $0 }'
    
    sed -n '/false/,$p' ./.prof

    def compare_all_lib

    dp install
}        
# 
# 
#     # compare_all_lib
#     # backup_ver $(dp_version)
#     # dp_install
    # ls -al .. ../{bin,lib}
    # unset $(functions ../bin/dp{,util}lib})
    # source dp_app
    # git ls-files, git status
    # functions $(which dp_app)
    # test FUN_ASAPP
    # def dp;
    # dp abstracts | j
    # dp help
    # dp_install
    echo . . . . . . .
    dp_libraries ./.prof
    echo . . . . . . .
    dp_libraries ./dplib
