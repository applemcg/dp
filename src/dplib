dp () 
{ 
    : do Dot Prof;
    : date: 2022-08-19;
    : date: 2022-08-20;
    : date: 2022-08-22;
    set -- ./.prof;
    [[ -f $1 ]] || { 
        cp $(dp_root)/lib/dot.prof $1
    };
    isfunction backup && backup $1;
    source $1
}
dp_abstracts () 
{ 
    : write the Table for DP function ABSTRACTS;
    rdb_hdr name abstract;
    foreach abstract $(dp_all)
}
dp_all () 
{ 
    : all the functions in the DP family;
    : date: 2022-08-22;
    ${*:-echo} dp dp_{abstracts,all,diff,example,funs,init,install,obsolete,profs,root,test,tolibrary,utilities,version}
}
dp_example () 
{ 
    : dotprof usage examples;
    : date: 2022-08-19;
    foreach dp_funs $(dp_profs) 1>&2;
    echo . . . .;
    foreach dp_funs $(dp_profs) | field 2 | sort -u;
    echo . . . .;
    declare -f $(myname)
}
dp_funs () 
{ 
    : list all function and their Dot Prof file;
    : date: 2022-07-30;
    : date: 2022-08-19;
    functions $1 | sed "s=$=	$1="
}
dp_init () 
{ 
    : bring along its utillib;
    : date: 2022-08-20;
    : date: 2022-08-22;
    source $(which dputillib);
    isfunction dp_obsolete && dp_obsolete unset;
    dp_root
}
dp_install () 
{ 
    : move the run-time components into place;
    : date: 2022-08-20;
    : date: 2022-08-22;
    : ------------------ two main components of an APPs BITMELD --;
    : date: 2022-08-27;
    :;
    local bin=$(needir $(dp_root)/bin);
    local lib=$(needir $(dp_root)/lib);
    :;
    : ---------------- install Readable Information in the ROOT --;
    :;
    ln -f ./README.md $(dp_root);
    ln -f ./Changelog.md $(dp_root);
    :;
    : ------------------------------- manufacture the dputillib --;
    :;
    dp_utilities | onlyChanged dputillib;
    :;
    : ------------------- install the function libraries in BIN --;
    :;
    chmod 775 ./dp{,util}lib;
    ln -f ./dplib $bin;
    ln -f ./dputillib $bin;
    :;
    : ------------------------------- install text files in LIB --;
    ln -f ./dot.prof $lib;
    :;
    : ------------------------------------------- all installed --;
    :;
    indir $(dp_root) find . -type file | egrep -v '\.(bak|git)/'
}
dp_profs () 
{ 
    : list the active Dot-Profs;
    : date: 2022-07-30;
    : date: 2022-08-19;
    find $(home) -type f -name .prof | egrep -v '.(ver|bak)/'
}
dp_root () 
{ 
    : the development, think ~/src/... directory for source control;
    : date: 2022-08-22;
    : ${DP_ROOT:=$(needir $HOME/Dropbox/marty3/git/dp)};
    ${*:-echo} $DP_ROOT
}
dp_test () 
{ 
    : home for DP testing, "it's shaping up in the FALSE block";
    : date: 2022-08-19;
    : date: 2022-08-20;
    : date: 2022-08-22;
    ${*:-echo} $(needir $(dp_root)/dp_test)
}
dp_utilities () 
{ 
    : functions used by dplib functions;
    : date: 2022-08-20;
    declare -f $(comm -23 <(app_fun $(functions dplib) 2> /dev/null) <( dp_all| tpl))
}
dp_version () 
{ 
    : print the version;
    : the SMART way, dp_version backup_ver;
    : date: 2022-08-22;
    : date: 2022-08-27;
    ${*:-echo} 0.3.0
}
dp_diff () 
{ 
    : diff LIB and .prof versions of functions;
    : lessons: ?? foreach was OK but Examine your TEST CASE, steady on DIFF ?;
    : date: 2022-08-22;
    debug ENTRY $# $*;
    if_missingargs 2 $* && return;
    local lib=$(which $1);
    shift;
    debug LIB: $lib;
    for fun in $@;
    do
        debug FUN: $fun;
        fun_peek $fun .prof > .dotp;
        fun_peek $fun $lib > .dlib;
        diff .dlib .dotp 1>&2 || { 
            printf "RETURN $?\n< $lib\n$fun\t.prof\n========\n\n\n"
        };
    done
}
dp_tolibrary () 
{ 
    : write dot prof functions to their primary directory;
    : date: 2022-08-25;
    local out=./funlib.out;
    for dir in $(
      do_whf $(fdp) | tee $out | nf gt 1 | field 2 | sort -u
      );
    do
        lib=$(basename $dir);
        funslib $(grep $lib $out| field 1);
    done
}
eval dp_init 1>&2
