ksource functionlib 2> /dev/null
source ./dp_app    2> /dev/null
source ./dplib     2> /dev/null
export USER_BACKUP_AREA=/git/
export ALTERNATE_BACKUP_DIRS=".bak ../version"
alias dpd='off; source ./.prof'
dp_version () 
{ 
    : print the version;
    : the SMART way, dp_version backup_ver;
    : date: 2022-08-22;
    : date: 2022-08-27;
    ${*:-echo} 0.4.a
}
dp_install () 
{ 
    : move the run-time components into place;
    : versions are tracked in SRC, not in BIN, LIB;
    : date: 2022-08-20;
    : ------------------ two main components of an APPs BITMELD --;
    : date: 2022-08-27;
    :;
    runfrom $(dp_root)   || return;
    :;
    local bin=$(needir $(dp_root)/bin);
    local lib=$(needir $(dp_root)/lib);
    :;
    : ---------------------------------- manufacture the dp_app --;
    :;
    badkup ./dplib ./dp_app
    dp_utilities | cat - ./dplib | onlyChanged ./dp_app;
    :;
    : ------------------------- install just the APP in the BIN --;
    :;
    chmod 775 ./dp_app;
    ln -f ./dp_app $bin;
    :;
    : ------------------------------- install text files in LIB --;
    ln -f ./dot.prof $lib;
    :;
    : ------------------------------------------- all installed --;
    :;
    indir $(dp_root) find . -type file | egrep -v '\.(bak|git)/'
}

false &&
{
	return;
	# see Workflow.md

    see DOT fuse for "fuse"
    
    mv .ver/* ../version
    backup_ver 0.4.b
    find ../version -type f
    echo . . . . . . .
    ls -al .. ../{bin,lib}
    # ---------------- inspect the versioning functions	--
    #
    def dp_version backup_ver
    # ------------------------------ here is an example	--
    #
    dp_version backup_ver 2>&1

    find $(dp_version backup_ver 2>&1)
    # ----------------------------- show off the latest	--
    #
    ls -lrtd $(find $(dp_version backup_ver 2>&1))


    # dp_utilities | awk '$2 ~ /[(][)]/ { fun = $1; } /reading/ { printf "%s\t%s\n", fun, $0 }'
    
    sed -n '/false/,$p' ./.prof

    def compare_all_lib

    dp install
}        
# 
# 
#     # compare_all_lib
#     # backup_ver $(dp_version)
#     # dp_install
    # ls -al .. ../{bin,lib}
    # unset $(functions ../bin/dp{,util}lib})
    # source dp_app
    # git ls-files, git status
    # functions $(which dp_app)
    # test FUN_ASAPP
    # def dp;
    # dp abstracts | j
    # dp help
    # dp_install
    comment . . . . . . .
    def dp; pause
    # dp_libraries ./.prof | grep functionlib | field 1

